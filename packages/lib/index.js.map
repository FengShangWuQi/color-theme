{"version":3,"sources":["../src/index.js"],"names":["ColorTheme","handleColorChange","type","props","onhandleColorChange","colorArr","onhandleClick","setState","selected","handleBgChange","onhandleBgChange","bgColor","handleClickColor","key","handleAddColor","pickerVisible","overlayVisible","handleDeleteColor","state","forEach","curr","index","colors","indexOf","splice","handleAccept","pickerColor","push","handleCancel","handleChangeComplete","color","hex","renderColorTheme","active","theme","map","backgroundColor","renderBg","display","propTypes","string","isRequired","array","bool","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PhotoshopPicker } from 'react-color';\nimport ColorThemeItem from './ColorThemeItem';\nimport BackgroundItem from './BackgroundItem';\n\nimport './style.css';\n\nclass ColorTheme extends Component {\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    theme: PropTypes.array.isRequired,\n    active: PropTypes.bool,\n    onhandleColorChange: PropTypes.func,\n    onhandleBgChange: PropTypes.func,\n    onhandleClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    active: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      pickerVisible: false,\n      colorArr: [],\n      pickerColor: '#D87C7C',\n      selected: '',\n      overlayVisible: 'none',\n    };\n  }\n\n  handleColorChange = colorArr => {\n    const { type } = this.props;\n    this.props.onhandleColorChange(colorArr);\n    this.props.onhandleClick(type);\n\n    this.setState({\n      colorArr,\n      selected: '',\n    });\n  };\n\n  handleBgChange = bgColor => {\n    this.props.onhandleBgChange(bgColor);\n    this.props.onhandleClick(this.props.type);\n\n    this.setState({\n      selected: '',\n    });\n  };\n\n  handleClickColor = key => {\n    this.setState({\n      selected: key,\n    });\n  };\n\n  handleAddColor = colorArr => {\n    this.setState({\n      colorArr,\n      pickerVisible: true,\n      overlayVisible: 'block',\n    });\n  };\n\n  handleDeleteColor = colors => {\n    const { colorArr } = this.state;\n\n    colorArr.forEach((curr, index) => {\n      if (colors.indexOf(index) !== -1) {\n        colorArr.splice(index, 1);\n      }\n    });\n    this.props.onhandleColorChange(colorArr);\n  };\n\n  handleAccept = () => {\n    const { colorArr, pickerColor } = this.state;\n\n    colorArr.push(pickerColor);\n    this.props.onhandleColorChange(colorArr);\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  };\n\n  handleChangeComplete = color => {\n    this.setState({\n      pickerColor: color.hex,\n    });\n  };\n\n  renderColorTheme = () => {\n    const { active, type } = this.props;\n\n    return this.props.theme.map((curr, index) => (\n      <ColorThemeItem\n        key={index}\n        id={index}\n        active={active && index === this.state.selected}\n        disRemove={this.state.pickerVisible}\n        color={curr.color}\n        backgroundColor={type === 'theme' ? curr.backgroundColor : ''}\n        onColorChange={this.handleColorChange}\n        onBgChange={this.handleBgChange}\n        onAddChange={this.handleAddColor}\n        onDeleteChange={this.handleDeleteColor}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  };\n\n  renderBg = () => {\n    return this.props.theme.map((color, index) => (\n      <BackgroundItem\n        key={index}\n        id={index}\n        active={this.props.active && index === this.state.selected}\n        background={color}\n        onBgChange={this.handleBgChange}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  };\n\n  render() {\n    const { pickerColor, pickerVisible, overlayVisible } = this.state;\n\n    return (\n      <div className=\"color-theme\">\n        <ul className=\"theme-ul\">\n          {this.props.type === 'bg' ? this.renderBg() : this.renderColorTheme()}\n        </ul>\n        <div\n          className=\"color-picker\"\n          style={{ display: pickerVisible ? 'block' : 'none' }}\n        >\n          <PhotoshopPicker\n            color={pickerColor}\n            header=\"颜色选择器\"\n            onAccept={this.handleAccept}\n            onCancel={this.handleCancel}\n            onChangeComplete={this.handleChangeComplete}\n          />\n        </div>\n        <div style={{ display: overlayVisible }} className=\"overlay\" />\n      </div>\n    );\n  }\n}\n\nexport default ColorTheme;\n"]}
{"version":3,"sources":["../../../src/components/BackgroundItem/index.js"],"names":["Actions","mapStateToProps","colorTheme","mapDispatchToProps","actions","dispatch","BackgroundItem","handleBgChange","props","id","background","onBgChange","onClickChange","active","style","propTypes","number","bool","string","func","isRequired","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;IAAYA,O;;AACZ;;AAEA;;;;;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SAAqB,EAAEA,sBAAF,EAArB;AAAA,CAAxB;AACA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCC,aAAS,+BAAmBJ,OAAnB,EAA4BK,QAA5B;AAD6B,GAAb;AAAA,CAA3B;;IAIMC,c;;;;;;;;;;;;;;8NAUJC,c,GAAiB,YAAM;AAAA,wBACM,MAAKC,KADX;AAAA,UACbC,EADa,eACbA,EADa;AAAA,UACTC,UADS,eACTA,UADS;;;AAGrB,YAAKF,KAAL,CAAWG,UAAX,CAAsBF,EAAtB,EAA0BC,UAA1B;AACA,YAAKF,KAAL,CAAWI,aAAX,CAAyBH,EAAzB;AACD,K;;;;;6BAEQ;AAAA,mBACwB,KAAKD,KAD7B;AAAA,UACCE,UADD,UACCA,UADD;AAAA,UACaG,MADb,UACaA,MADb;;AAEP,UAAMC,QAAQD,SAAS,8BAAT,GAA8B,EAA5C;;AAEA,aACE;AACE,eAAO,sBAAc,EAAEH,sBAAF,EAAd,EAA8BI,KAA9B,CADT;AAEE,mBAAU,oBAFZ;AAGE,iBAAS,KAAKP;AAHhB,QADF;AAOD;;;;;AA5BGD,c,CACGS,S,GAAY;AACjBN,MAAI,oBAAUO,MADG;AAEjBH,UAAQ,oBAAUI,IAFD;AAGjBP,cAAY,oBAAUQ,MAHL;AAIjBP,cAAY,oBAAUQ,IAJL;AAKjBP,iBAAe,oBAAUO,IAAV,CAAeC,UALb;AAMjBhB,WAAS,oBAAUiB,MAAV,CAAiBD;AANT,C;kBA8BN,yBAAQnB,eAAR,EAAyBE,kBAAzB,EAA6CG,cAA7C,C","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actions';\nimport { getSelectedStyle } from '../../utils';\n\nimport '../../style.css';\n\nconst mapStateToProps = ({ colorTheme }) => ({ colorTheme });\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch),\n});\n\nclass BackgroundItem extends Component {\n  static propTypes = {\n    id: PropTypes.number,\n    active: PropTypes.bool,\n    background: PropTypes.string,\n    onBgChange: PropTypes.func,\n    onClickChange: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  handleBgChange = () => {\n    const { id, background } = this.props;\n\n    this.props.onBgChange(id, background);\n    this.props.onClickChange(id);\n  };\n\n  render() {\n    const { background, active } = this.props;\n    const style = active ? getSelectedStyle() : {};\n\n    return (\n      <span\n        style={Object.assign({ background }, style)}\n        className=\"colorTheme-li-span\"\n        onClick={this.handleBgChange}\n      />\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BackgroundItem);\n"]}
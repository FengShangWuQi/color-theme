{"version":3,"sources":["../src/index.js"],"names":["ColorTheme","handleColorChange","type","props","onhandleColorChange","colorArr","onhandleClick","setState","selected","handleBgChange","onhandleBgChange","bgColor","handleClickColor","key","handleAddColor","pickerVisible","overlayVisible","handleDeleteColor","state","remove","curr","index","colors","indexOf","handleAccept","pickerColor","push","handleCancel","handleChangeComplete","color","hex","renderColorTheme","active","theme","map","backgroundColor","renderBg","display","propTypes","string","isRequired","array","bool","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { PhotoshopPicker } from 'react-color';\n\nimport './style.css';\n\nimport ColorThemeItem from './ColorThemeItem';\nimport BackgroundItem from './BackgroundItem';\n\nclass ColorTheme extends Component {\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    theme: PropTypes.array.isRequired,\n    active: PropTypes.bool,\n    onhandleColorChange: PropTypes.func,\n    onhandleBgChange: PropTypes.func,\n    onhandleClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    active: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      pickerVisible: false,\n      colorArr: [],\n      pickerColor: '#D87C7C',\n      selected: '',\n      overlayVisible: 'none',\n    };\n  }\n\n  /** 处理颜色 */\n  handleColorChange = colorArr => {\n    const { type } = this.props;\n\n    this.props.onhandleColorChange(colorArr);\n    this.props.onhandleClick(type);\n\n    this.setState({\n      colorArr,\n      selected: '',\n    });\n  }\n\n  /** 处理背景 */\n  handleBgChange = bgColor => {\n    this.props.onhandleBgChange(bgColor);\n    this.props.onhandleClick(this.props.type);\n\n    this.setState({\n      selected: '',\n    });\n  }\n\n  /** 处理点击 */\n  handleClickColor = key => {\n    this.setState({\n      selected: key,\n    });\n  }\n\n  /** 增加色块 */\n  handleAddColor = colorArr => {\n    this.setState({\n      colorArr,\n      pickerVisible: true,\n      overlayVisible: 'block',\n    });\n  }\n\n  /** 删除色块 */\n  handleDeleteColor = colors => {\n    const { colorArr } = this.state;\n\n    _.remove(colorArr, (curr, index) => colors.indexOf(index) !== -1);\n    this.props.onhandleColorChange(colorArr);\n  }\n\n  /** 处理颜色选择器选择 */\n  handleAccept = () => {\n    const { colorArr, pickerColor } = this.state;\n\n    colorArr.push(pickerColor);\n    this.props.onhandleColorChange(colorArr);\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  }\n\n  /** 处理颜色选择器取消 */\n  handleCancel = () => {\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  }\n\n  /** 处理颜色选择器修改 */\n  handleChangeComplete = color => {\n    this.setState({\n      pickerColor: color.hex,\n    });\n  }\n\n  /** 渲染主题 */\n  renderColorTheme = () => {\n    const { active, type } = this.props;\n\n    return this.props.theme.map((curr, index) => (\n      <ColorThemeItem\n        key={index}\n        id={index}\n        active={active && index === this.state.selected}\n        disRemove={this.state.pickerVisible}\n        color={curr.color}\n        backgroundColor={type === 'theme' ? curr.backgroundColor : ''}\n        onColorChange={this.handleColorChange}\n        onBgChange={this.handleBgChange}\n        onAddChange={this.handleAddColor}\n        onDeleteChange={this.handleDeleteColor}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  }\n\n  /** 渲染背景 */\n  renderBg = () => {\n    return this.props.theme.map((color, index) => (\n      <BackgroundItem\n        key={index}\n        id={index}\n        active={this.props.active && index === this.state.selected}\n        background={color}\n        onBgChange={this.handleBgChange}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  }\n\n  render() {\n    const { pickerColor, pickerVisible, overlayVisible } = this.state;\n\n    return (\n      <div className=\"color-theme\">\n        <ul className=\"theme-ul\">\n          { this.props.type === 'bg' ? this.renderBg() : this.renderColorTheme() }\n        </ul>\n        <div className=\"color-picker\" style={{ display: pickerVisible ? 'block' : 'none' }}>\n          <PhotoshopPicker\n            color={pickerColor}\n            header=\"颜色选择器\"\n            onAccept={this.handleAccept}\n            onCancel={this.handleCancel}\n            onChangeComplete={this.handleChangeComplete}\n          />\n        </div>\n        <div style={{ display: overlayVisible }} className=\"overlay\"></div>\n      </div>\n    );\n  }\n}\n\nexport default ColorTheme;\n"]}
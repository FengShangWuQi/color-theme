{"version":3,"sources":["../src/index.js"],"names":["ColorTheme","handleColorChange","bind","handleBgChange","handleClickColor","handleAddColor","handleDeleteColor","handleAccept","handleCancel","handleChangeComplete","state","pickerVisible","colorArr","pickerColor","selected","overlayVisible","type","props","onhandleColorChange","onhandleClick","setState","bgColor","onhandleBgChange","key","colors","remove","curr","index","indexOf","push","color","hex","active","theme","map","backgroundColor","renderBg","renderColorTheme","display","propTypes","string","isRequired","array","bool","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { PhotoshopPicker } from 'react-color';\n\nimport './style.css';\n\nimport ColorThemeItem from './ColorThemeItem';\nimport BackgroundItem from './BackgroundItem';\n\nclass ColorTheme extends Component {\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    theme: PropTypes.array.isRequired,\n    active: PropTypes.bool,\n    onhandleColorChange: PropTypes.func,\n    onhandleBgChange: PropTypes.func,\n    onhandleClick: PropTypes.func,\n  };\n\n  static defaultProps = {\n    active: false,\n  };\n\n  constructor() {\n    super();\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.handleBgChange = this.handleBgChange.bind(this);\n    this.handleClickColor = this.handleClickColor.bind(this);\n    this.handleAddColor = this.handleAddColor.bind(this);\n    this.handleDeleteColor = this.handleDeleteColor.bind(this);\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChangeComplete = this.handleChangeComplete.bind(this);\n    this.state = {\n      pickerVisible: false,\n      colorArr: [],\n      pickerColor: '#D87C7C',\n      selected: '',\n      overlayVisible: 'none',\n    };\n  }\n\n  /** 处理颜色 */\n  handleColorChange(colorArr) {\n    const { type } = this.props;\n\n    this.props.onhandleColorChange(colorArr);\n    this.props.onhandleClick(type);\n\n    this.setState({\n      colorArr,\n      selected: '',\n    });\n  }\n\n  /** 处理背景 */\n  handleBgChange(bgColor) {\n    this.props.onhandleBgChange(bgColor);\n    this.props.onhandleClick(this.props.type);\n\n    this.setState({\n      selected: '',\n    });\n  }\n\n  /** 处理点击 */\n  handleClickColor(key) {\n    this.setState({\n      selected: key,\n    });\n  }\n\n  /** 增加色块 */\n  handleAddColor(colorArr) {\n    this.setState({\n      colorArr,\n      pickerVisible: true,\n      overlayVisible: 'block',\n    });\n  }\n\n  /** 删除色块 */\n  handleDeleteColor(colors) {\n    const { colorArr } = this.state;\n\n    _.remove(colorArr, (curr, index) => colors.indexOf(index) !== -1);\n    this.props.onhandleColorChange(colorArr);\n  }\n\n  /** 处理颜色选择器选择 */\n  handleAccept() {\n    const { colorArr, pickerColor } = this.state;\n\n    colorArr.push(pickerColor);\n    this.props.onhandleColorChange(colorArr);\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  }\n\n  /** 处理颜色选择器取消 */\n  handleCancel() {\n    this.setState({\n      pickerVisible: false,\n      overlayVisible: 'none',\n    });\n  }\n\n  /** 处理颜色选择器修改 */\n  handleChangeComplete(color) {\n    this.setState({\n      pickerColor: color.hex,\n    });\n  }\n\n  /** 渲染主题 */\n  renderColorTheme() {\n    const { active, type } = this.props;\n\n    return this.props.theme.map((curr, index) => (\n      <ColorThemeItem\n        key={index}\n        id={index}\n        active={active && index === this.state.selected}\n        disRemove={this.state.pickerVisible}\n        color={curr.color}\n        backgroundColor={type === 'theme' ? curr.backgroundColor : ''}\n        onColorChange={this.handleColorChange}\n        onBgChange={this.handleBgChange}\n        onAddChange={this.handleAddColor}\n        onDeleteChange={this.handleDeleteColor}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  }\n\n  /** 渲染背景 */\n  renderBg() {\n    return this.props.theme.map((color, index) => (\n      <BackgroundItem\n        key={index}\n        id={index}\n        active={this.props.active && index === this.state.selected}\n        background={color}\n        onBgChange={this.handleBgChange}\n        onClickChange={this.handleClickColor}\n      />\n    ));\n  }\n\n  render() {\n    const { pickerColor, pickerVisible, overlayVisible } = this.state;\n\n    return (\n      <div className=\"color-theme\">\n        <ul className=\"theme-ul\">\n          { this.props.type === 'bg' ? this.renderBg() : this.renderColorTheme() }\n        </ul>\n        <div className=\"color-picker\" style={{ display: pickerVisible ? 'block' : 'none' }}>\n          <PhotoshopPicker\n            color={pickerColor}\n            header=\"颜色选择器\"\n            onAccept={this.handleAccept}\n            onCancel={this.handleCancel}\n            onChangeComplete={this.handleChangeComplete}\n          />\n        </div>\n        <div style={{ display: overlayVisible }} className=\"overlay\"></div>\n      </div>\n    );\n  }\n}\n\nexport default ColorTheme;\n"]}